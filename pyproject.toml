[project]
name = "lightera-bundokai"
version = "0.1.0"
description = "Lightera BUNDOKAI - Sistema de Check-in e Entregas para eventos corporativos"
requires-python = ">=3.11"
dependencies = [
    "email-validator>=2.3.0",
    "flask>=3.1.2",
    "flask-sqlalchemy>=3.1.1",
    "gunicorn>=23.0.0",
    "pandas==2.1.1",
    "pillow==10.0.1",
    "psycopg2-binary>=2.9.10",
    "python-dotenv==1.0.0",
    "qrcode>=8.2",
    "sqlalchemy>=2.0.43",
    "werkzeug>=3.1.3",
]

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.2.0",
    "pytest-mock>=3.11.0",
    "coverage>=7.3.0",
]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.4.0",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["lightera_bundokai"]
py-modules = ["app", "models", "routes", "utils", "auth"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "-v"
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    "*/migrations/*",
    "*/venv/*",
    "*/site-packages/*",
    "scripts/*"
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.tox
  | \.eggs
  | __pycache__
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
